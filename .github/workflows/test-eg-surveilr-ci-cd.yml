name: Deploy Surveilr Application

on:
  push:
    branches:
      - main  # Trigger the workflow only on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
       # docker build -t ghcr.io/${{ github.repository }}/surveilr-app:latest .
        docker build -t ghcr.io/niba-nazar/surveilr-app:latest .
        
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image to GHCR
      run: |
        #docker push ghcr.io/${{ github.repository }}/surveilr-app:latest
        docker push ghcr.io/niba-nazar/surveilr-app:latest 
      
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: SSH into production server and deploy
      run: |
        # SSH into the production server and execute commands
        ssh -p 22 -o StrictHostKeyChecking=no -t ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          # Pull the latest Docker image from GHCR
          docker pull ghcr.io/${{ github.repository }}/surveilr-app:latest
          docker pull ghcr.io/niba-nazar/surveilr-app:latest
 
          # Stop and remove the old container if it exists
          docker ps -q -f name=surveilr-runtime | xargs -r docker stop
          docker ps -a -q -f name=surveilr-runtime | xargs -r docker rm

          # Start the new container using Docker Compose
          docker-compose up -d
        EOF
